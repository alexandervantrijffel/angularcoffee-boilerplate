{"version":3,"sources":["common.coffee","common.js","app.coffee","app.js","views/view1.coffee","views/view1.js","views/view2.coffee","views/view2.js"],"names":["console","length","method","methods","noop","window","l","_this","t","s","log","this","call","angular","module","config","$routeProvider","$httpProvider","param","otherwise","redirectTo","defaults","headers","post","obj","fullSubName","i","innerObj","name","query","subName","subValue","value","Array","Object","undefined","encodeURIComponent","substr","transformRequest","data","isObject","String","when","templateUrl","controller"],"mappings":"CACA,WAAA,GAAAA,GAAAC,EAAAC,EAAAC,EAAAC,CAWA,KAXAA,EAAO,aAEPD,GACI,SAAU,QAAS,QAAS,QAAS,MAAO,SAAU,QACtD,YAAa,QAAS,iBAAkB,WAAY,OAAQ,MAC5D,eAAgB,UAAW,aAAc,QAAS,OAAQ,UAC1D,WAAY,cAAe,YAAa,QAAS,QAErDF,EAASE,EAAQF,OACjBD,EAAWK,OAAOL,QAAUK,OAAOL,YAE5BC,KACHC,EAASC,EAAQF,GAGZD,EAAQE,KACTF,EAAQE,GAAUE,EAE1BC,QAAOC,EAAI,SAAAC,GCAP,MDAO,UAACC,EAAEC,GACV,MAAGA,GAAOT,EAAQU,IAAIF,EAAEC,GAAOT,EAAQU,IAAIF,KADpCG,QCSRC,KAAKD;CC5BR,WAAAE,QAAQC,OAAO,SACb,UACA,cACA,cACA,kBACCC,QACD,iBAAiB,gBAAgB,SAACC,EAAeC,GAC/C,GAAAC,ECiDE,ODjDFF,GAAeG,WAAUC,WAAY,WAGrCH,EAAcI,SAASC,QAAQC,KAAK,gBAAkB,kDAMtDL,EAAQ,SAACM,GACL,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAAAH,GAAQ,GACRD,EAAO,OACPI,EAAQ,OACRP,EAAc,OACdK,EAAU,OACVC,EAAW,OACXJ,EAAW,OACXD,EAAI,MACJ,KAAAE,IAAAJ,GAEI,GADAQ,EAAQR,EAAII,GACTI,YAAiBC,OAEhB,IADAP,EAAI,EACEA,EAAIM,EAAM/B,QACZ8B,EAAWC,EAAMN,GACjBD,EAAcG,EAAO,IAAMF,EAAI,IAC/BC,KACAA,EAASF,GAAeM,EACxBF,GAASX,EAAMS,GAAY,MACzBD,MACL,IAAGM,YAAiBE,QACrB,IAAAJ,IAAAE,GACID,EAAWC,EAAMF,GACjBL,EAAcG,EAAO,IAAME,EAAU,IACrCH,KACAA,EAASF,GAAeM,EACxBF,GAASX,EAAMS,GAAY,QAC2DQ,UAAXH,GAAsC,OAAXA,IAAzGH,GAASO,mBAAmBR,GAAQ,IAAMQ,mBAAmBJ,GAAS,IAC9E,OAAGH,GAAM5B,OAAY4B,EAAMQ,OAAO,EAAGR,EAAM5B,OAAS,GAAQ4B,GAEjEZ,EAAcI,SAASiB,kBAAoB,SAACC,GACvC,MAAG1B,SAAQ2B,SAASD,IAA4B,kBAAlBE,OAAOF,GAAgCrB,EAAMqB,GAAWA,SCqB5F3B,KAAKD;CCnER,WAAAE,QAAQC,OAAO,eAAiB,YAAaC,QAC3C,iBACA,SAACC,GCAG,MDCFA,GAAe0B,KAAK,UAClBC,YAAa,mBACbC,WAAY,iBACfA,WAAW,aAAe,iBCG1BhC,KAAKD;CCVR,WAAAE,QAAQC,OAAO,eAAiB,YAAaC,QAC3C,iBACA,SAACC,GCCG,MDAFA,GAAe0B,KAAK,UAClBC,YAAa,mBACbC,WAAY,iBACfA,WAAW,aAAe,iBCI1BhC,KAAKD","file":"all.min.js","sourcesContent":["# Avoid `console` errors in browsers that lack a console.\r\nnoop = () ->\r\n    \r\nmethods = [\r\n    'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\r\n    'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\r\n    'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\r\n    'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'\r\n]\r\nlength = methods.length\r\nconsole = (window.console = window.console || {})\r\n\r\nwhile (length--)\r\n    method = methods[length]\r\n\r\n    # Only stub undefined methods.\r\n    if (!console[method])\r\n        console[method] = noop\r\n\r\nwindow.l = (t,s) =>\r\n    if s then console.log t,s else console.log t\r\n","(function() {\n  var console, length, method, methods, noop;\n\n  noop = function() {};\n\n  methods = ['assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error', 'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd', 'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'];\n\n  length = methods.length;\n\n  console = (window.console = window.console || {});\n\n  while (length--) {\n    method = methods[length];\n    if (!console[method]) {\n      console[method] = noop;\n    }\n  }\n\n  window.l = (function(_this) {\n    return function(t, s) {\n      if (s) {\n        return console.log(t, s);\n      } else {\n        return console.log(t);\n      }\n    };\n  })(this);\n\n}).call(this);\n","angular.module('myApp', [\r\n  'ngRoute'\r\n  'myApp.view1'\r\n  'myApp.view2'\r\n  'myApp.version'\r\n]).config [\r\n  '$routeProvider','$httpProvider',($routeProvider,$httpProvider) ->\r\n    $routeProvider.otherwise redirectTo: '/view1'\r\n    \r\n    \r\n    $httpProvider.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded;charset=utf-8\"\r\n    ###*\r\n    The workhorse; converts an object to x-www-form-urlencoded serialization.\r\n    @param {Object} obj\r\n    @return {String}\r\n    ###\r\n    param = (obj) ->\r\n        query = \"\"\r\n        name = undefined\r\n        value = undefined\r\n        fullSubName = undefined\r\n        subName = undefined\r\n        subValue = undefined\r\n        innerObj = undefined\r\n        i = undefined\r\n        for name of obj\r\n            value = obj[name]\r\n            if value instanceof Array\r\n                i = 0\r\n                while i < value.length\r\n                    subValue = value[i]\r\n                    fullSubName = name + \"[\" + i + \"]\"\r\n                    innerObj = {}\r\n                    innerObj[fullSubName] = subValue\r\n                    query += param(innerObj) + \"&\"\r\n                    ++i\r\n            else if value instanceof Object\r\n                for subName of value\r\n                    subValue = value[subName]\r\n                    fullSubName = name + \"[\" + subName + \"]\"\r\n                    innerObj = {}\r\n                    innerObj[fullSubName] = subValue\r\n                    query += param(innerObj) + \"&\"\r\n            else query += encodeURIComponent(name) + \"=\" + encodeURIComponent(value) + \"&\"  if value isnt `undefined` and value isnt null\r\n        (if query.length then query.substr(0, query.length - 1) else query)\r\n    # Override $http service's default transformRequest\r\n    $httpProvider.defaults.transformRequest = [(data) ->\r\n        (if angular.isObject(data) and String(data) isnt \"[object File]\" then param(data) else data)\r\n    ]\r\n]","(function() {\n  angular.module('myApp', ['ngRoute', 'myApp.view1', 'myApp.view2', 'myApp.version']).config([\n    '$routeProvider', '$httpProvider', function($routeProvider, $httpProvider) {\n      var param;\n      $routeProvider.otherwise({\n        redirectTo: '/view1'\n      });\n      $httpProvider.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded;charset=utf-8\";\n\n      /**\n      The workhorse; converts an object to x-www-form-urlencoded serialization.\n      @param {Object} obj\n      @return {String}\n       */\n      param = function(obj) {\n        var fullSubName, i, innerObj, name, query, subName, subValue, value;\n        query = \"\";\n        name = void 0;\n        value = void 0;\n        fullSubName = void 0;\n        subName = void 0;\n        subValue = void 0;\n        innerObj = void 0;\n        i = void 0;\n        for (name in obj) {\n          value = obj[name];\n          if (value instanceof Array) {\n            i = 0;\n            while (i < value.length) {\n              subValue = value[i];\n              fullSubName = name + \"[\" + i + \"]\";\n              innerObj = {};\n              innerObj[fullSubName] = subValue;\n              query += param(innerObj) + \"&\";\n              ++i;\n            }\n          } else if (value instanceof Object) {\n            for (subName in value) {\n              subValue = value[subName];\n              fullSubName = name + \"[\" + subName + \"]\";\n              innerObj = {};\n              innerObj[fullSubName] = subValue;\n              query += param(innerObj) + \"&\";\n            }\n          } else {\n            if (value !== undefined && value !== null) {\n              query += encodeURIComponent(name) + \"=\" + encodeURIComponent(value) + \"&\";\n            }\n          }\n        }\n        if (query.length) {\n          return query.substr(0, query.length - 1);\n        } else {\n          return query;\n        }\n      };\n      return $httpProvider.defaults.transformRequest = [\n        function(data) {\n          if (angular.isObject(data) && String(data) !== \"[object File]\") {\n            return param(data);\n          } else {\n            return data;\n          }\n        }\n      ];\n    }\n  ]);\n\n}).call(this);\n","# CoffeeScript\r\nangular.module('myApp.view1', [ 'ngRoute' ]).config([\r\n  '$routeProvider'\r\n  ($routeProvider) ->\r\n    $routeProvider.when '/view1',\r\n      templateUrl: 'views/view1.html'\r\n      controller: 'View1Ctrl'\r\n]).controller 'View1Ctrl', [ ->\r\n ]\r\n","(function() {\n  angular.module('myApp.view1', ['ngRoute']).config([\n    '$routeProvider', function($routeProvider) {\n      return $routeProvider.when('/view1', {\n        templateUrl: 'views/view1.html',\n        controller: 'View1Ctrl'\n      });\n    }\n  ]).controller('View1Ctrl', [function() {}]);\n\n}).call(this);\n","angular.module('myApp.view2', [ 'ngRoute' ]).config([\r\n  '$routeProvider'\r\n  ($routeProvider) ->\r\n    $routeProvider.when '/view2',\r\n      templateUrl: 'views/view2.html'\r\n      controller: 'View2Ctrl'\r\n]).controller 'View2Ctrl', [ ->\r\n ]","(function() {\n  angular.module('myApp.view2', ['ngRoute']).config([\n    '$routeProvider', function($routeProvider) {\n      return $routeProvider.when('/view2', {\n        templateUrl: 'views/view2.html',\n        controller: 'View2Ctrl'\n      });\n    }\n  ]).controller('View2Ctrl', [function() {}]);\n\n}).call(this);\n"],"sourceRoot":"/source/"}