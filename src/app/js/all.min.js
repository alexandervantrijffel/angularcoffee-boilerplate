(function(){angular.module("myApp",["ngRoute","myApp.view1","myApp.view2","myApp.version"]).config(["$routeProvider","$httpProvider",function(e,o){var n;return e.otherwise({redirectTo:"/view1"}),o.defaults.headers.post["Content-Type"]="application/x-www-form-urlencoded;charset=utf-8",n=function(e){var o,t,i,r,d,u,a,c;d="",r=void 0,c=void 0,o=void 0,u=void 0,a=void 0,i=void 0,t=void 0;for(r in e)if(c=e[r],c instanceof Array)for(t=0;t<c.length;)a=c[t],o=r+"["+t+"]",i={},i[o]=a,d+=n(i)+"&",++t;else if(c instanceof Object)for(u in c)a=c[u],o=r+"["+u+"]",i={},i[o]=a,d+=n(i)+"&";else void 0!==c&&null!==c&&(d+=encodeURIComponent(r)+"="+encodeURIComponent(c)+"&");return d.length?d.substr(0,d.length-1):d},o.defaults.transformRequest=[function(e){return angular.isObject(e)&&"[object File]"!==String(e)?n(e):e}]}])}).call(this);
(function(){var e,i,n,o,r;for(r=function(){},o=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","markTimeline","profile","profileEnd","table","time","timeEnd","timeline","timelineEnd","timeStamp","trace","warn"],i=o.length,e=window.console=window.console||{};i--;)n=o[i],e[n]||(e[n]=r)}).call(this);
(function(){angular.module("myApp.view1",["ngRoute"]).config(["$routeProvider",function(e){e.when("/view1",{templateUrl:"view1/view1.html",controller:"View1Ctrl"})}]).controller("View1Ctrl",[function(){}])}).call(this);
//# sourceMappingURL=data:application/json;base64,
